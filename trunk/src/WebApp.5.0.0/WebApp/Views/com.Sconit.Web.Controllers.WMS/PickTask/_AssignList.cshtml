@model IEnumerable<com.Sconit.Entity.WMS.PickTask>
<script type="text/javascript">
    $(function () {
        $("#checkAll").click(function () {
            $('input[name="checkedRecords"]').attr("checked", this.checked);
            $("#btnAssign").attr("style", this.checked ? "display:inline" : "display:none");
        });
    });

    function showButtons() {
        var $checkRecords = $("input[name='checkedRecords']");
        var showButton = false;
        for (var i = 0; i < $checkRecords.length; i++) {
            if ($checkRecords[i].checked) {
                showButton = true;
                break;
            }
        }
        $("#checkAll").attr("checked", $checkRecords.length == $("input[name='checkedRecords']:checked").length ? true : false);
    }

    function PickTaskGrid_OnDataBinding(e) {
        e.data = {
            Item: $('#Item').val(),
            Location: $('#Location').val(),
            DateFrom: $('#DateFrom').val(),
            DateTo: $('#DateTo').val(),
            OrderNo: $('#OrderNo').val()
        };
    }
</script>
<fieldset>
    <legend>@Resources.WMS.PickTask.PickTask_Assign_Title</legend>
 <div class="search-footer">
        <table>
            <tr>
                <td>
                    <label>
                        @Resources.WMS.PickTask.PickTask_AssignUser
                    </label>
                </td>
                <td>
                     @{
        Html.RenderAction("_UserComboBox", "Common",
         new
         {
             ControlName = "AssignUser"
         });
                }
                </td>
                <td id="tdCarrayOver">
                    @Html.Button(Resources.SYS.Global.Button_Assign, "Url_PickTask_Assign", new Dictionary<string, string>()
	            {
	                {"type", "button"},
	                {"id", "btnAssign"},
                    {"needconfirm","true"},
                    {"onclick","assignCheckedPickTasks()"}
	            })
                </td>
            </tr>
        </table>
    </div>
    @(   
 Html.Telerik().Grid(Model)
          .Name("PickTaskGrid")
          .DataKeys(keys =>
          {
              keys.Add(p => p.Id);
          })
          .Columns(columns =>
          {
              columns.Bound(o => o.Item)
              .ClientTemplate("<input type='checkbox' id='checkedRecords' name='checkedRecords' value='<#= Id #>' onClick='showButtons()'  />")
              .HeaderTemplate("<input type='checkbox' id='checkAll' name='checkAll' />")
              .Width(36).HtmlAttributes(new { style = "text-align:center" });
             columns.Bound(o => o.ItemDescription);
             columns.Bound(o => o.Uom);
             columns.Bound(o => o.UnitCount);
             columns.Bound(o => o.UCDescription);
             columns.Bound(o => o.Location);
             columns.Bound(o => o.Area);
             columns.Bound(o => o.Bin);
             columns.Bound(o => o.LotNo);
             columns.Bound(o => o.HuId);
             columns.Bound(o => o.StartTime);
             columns.Bound(o => o.WinTime);
             columns.Bound(o => o.PickQty);    
          })

          .Scrollable(c => c.Enabled(false))
        .EnableCustomBinding(true)
                        .DataBinding(dataBinding => dataBinding.Ajax().Select("_AjaxAssignPlanList", "PickTask"))
                                          .ClientEvents(events => events.OnDataBinding("PickTaskGrid_OnDataBinding"))
        .Pageable(settings =>
        {
            settings.Total(ViewBag.Total == null ? 0 : ViewBag.Total);
            settings.PageSize(ViewBag.PageSize);
        })
        .Sortable()
        .Resizable(resizing => resizing.Columns(true))
    )

   
</fieldset>
