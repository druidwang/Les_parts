@model com.Sconit.Entity.TMS.TransportOrderMaster
@{
    Html.RenderAction("_SiteMapPath", "Common", new { MenuContent = "Url_OrderMstr_Distribution_New" });
}
<script type="text/javascript">
    function Carrier_Change(e) {
        var combobox = $(this).data("tComboBox");
        if (combobox == undefined) {
            return;
        }
    }

    function Flow_Change(e) {
        $('#Detail').show();
        var tabstrip = $("#TabStrip").data("tTabStrip");
        var item = $("li", tabstrip.element)[0]; 
        tabstrip.select(item);
    }

    function Vehicle_OnChange(e) {
        var combobox = $(this).data("tComboBox");
        if (combobox == undefined) {
            return;
        }
        if (combobox.selectedIndex == undefined || combobox.selectedIndex == -1) {
            combobox.value("");
            combobox.reload();
        }
        var driverComboBox = $('#Driver').data('tComboBox');
        driverComboBox.value('');
        driverComboBox.text('');
        driverComboBox.reload();

        var tonnageComboBox = $('#Tonnage').data('tComboBox');
        tonnageComboBox.value('');
        tonnageComboBox.text('');
        tonnageComboBox.reload();
    }

    function Driver_Change(e) {

    }

    function Driver_OnDataBinding(e) {
        e.data = {
            vehicle: $('#Vehicle').val(),
            includeBlankOption: false
        }
    }

    function Tonnage_OnDataBinding(e) {
        e.data = {
            vehicle: $('#Vehicle').val(),
            includeBlankOption: false
        }
    }

    $(document).ready(function () {
        var tabstrip = $("#TabStrip").data("tTabStrip");
        $($("li", tabstrip.element)[0]).find('a')[0].href += "?flow=qazwsx";
    }); 

</script>
@using (Html.BeginForm())
{
    <fieldset>
        <div class="editor">
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Flow)
            </div>
            <div class="editor-field-2">
                @{
                    Html.RenderAction("_TransportFlowComboBox", "Common", new
                    {
                        controlName = "Flow",
                        isChange = true
                    });
                }
                @Html.ValidationMessageFor(model => model.Flow)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.ExternalOrderNo)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model=>model.ExternalOrderNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Carrier)
            </div>
            <div class="editor-field-2">
                <div class="editor-field-2">
                @{
                    Html.RenderAction("_CarrierComboBox", "Common", new
                    {
                        controlName = "Carrier",
                        checkPermission = false,
                        isChange = true
                    });
                }
                @Html.ValidationMessageFor(model => model.Carrier)
                </div>
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.TransportMode)
            </div>
            <div class="editor-field-2">
            @{
                Html.RenderAction("_CodeMasterDropDownList", "Common", new
                {
                    code = com.Sconit.CodeMaster.CodeMaster.TransportMode,
                    controlName = "TransportMode"
                });
            }
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Vehicle)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().ComboBox()
                .DropDownHtmlAttributes(new { style = "width: 300px; " })
                .Name("Vehicle")
                .HiddenInputHtmlAttributes(new { id = "Vehicle" })
                .AutoFill(true)
                .DataBinding(binding => binding.Ajax()
                .Select("_AjaxLoadingVehicle", "Common", new
                {
                    includeBlankOption = false
                }))
                .ClientEvents(e => e.OnChange("Vehicle_OnChange"))
                .HighlightFirstMatch(true)
                .Enable(true))
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.PriceList)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().ComboBox()
                .DropDownHtmlAttributes(new { style = "width: 300px; " })
                .Name("PriceList")
                .HiddenInputHtmlAttributes(new { id = "PriceList" })
                .AutoFill(true)
                .DataBinding(binding => binding.Ajax()
                .Select("_AjaxLoadingTransportPriceList", "Common", new
                {
                    includeBlankOption = false
                }))
                .HighlightFirstMatch(true)
                .Enable(true))
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model=>model.Tonnage)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().ComboBox()
                .DropDownHtmlAttributes(new { style = "width: 300px; " })
                .Name("Tonnage")
                .HiddenInputHtmlAttributes(new { id = "Tonnage" })
                .AutoFill(true)
                .DataBinding(binding => binding.Ajax()
                .Select("_AjaxLoadingTonnage", "Common", new
                {
                    includeBlankOption = false
                }))
                .ClientEvents(e => e.OnDataBinding("Tonnage_OnDataBinding"))
                .HighlightFirstMatch(true)
                .Enable(true))
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.Driver)
            </div>
            <div class="editor-field-2">
                @(Html.Telerik().ComboBox()
                .DropDownHtmlAttributes(new { style = "width: 300px; " })
                .Name("Driver")
                .HiddenInputHtmlAttributes(new { id = "Driver" })
                .AutoFill(true)
                .DataBinding(binding => binding.Ajax()
                .Select("_AjaxLoadingDriver", "Common", new
                {
                    includeBlankOption = false
                }))
                .ClientEvents(e => e.OnChange("Driver_Change").OnDataBinding("Driver_OnDataBinding"))
                .HighlightFirstMatch(true)
                .Enable(true))
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LicenseNo)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.LicenseNo)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.DriverMobilePhone)
            </div>
            <div class="editor-field-2">
                @Html.TextBoxFor(model => model.DriverMobilePhone)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LoadVolume)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.LoadVolume).DecimalDigits(2).MinValue(0)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.LoadWeight)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.LoadWeight).DecimalDigits(2).MinValue(0)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MinLoadRate)
            </div>
            <div class="editor-field-2">
                @Html.Telerik().NumericTextBoxFor(model => model.MinLoadRate).DecimalDigits(2).MinValue(0)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.MultiSitePick)
            </div>
            <div class="editor-field-2">
                @Html.CheckBoxFor(model => model.MultiSitePick)
            </div>
            <div class="editor-label-2">
                @Html.LabelFor(model => model.IsAutoRelease)
            </div>
            <div class="editor-field-2">
                @Html.CheckBoxFor(model => model.IsAutoRelease)
            </div>
        </div>
        <div class="editor-footer">
            @Html.Button(Resources.SYS.Global.Button_New, "Url_TransportOrderMstr_Edit", new Dictionary<string, string>()
	        {
	            {"type", "button"},
	            {"id", "btnNew"},
                {"needconfirm","true"},
                {"onclick","onCreate()"}
	        })
        </div>
    </fieldset>
   
    <fieldset id="Detail" style="display:none;">
    @{ Html.Telerik().TabStrip()
        .Name("TabStrip")
        .Items(tabstrip =>
        {
            tabstrip.Add()
               .Text("ASN")
               .LoadContentFrom("_ASNBinding", "TransportOrder")
               .HtmlAttributes(new { onclick = "CleanTabMessage()" });

            tabstrip.Add()
                .Text("Routing")
                .LoadContentFrom("_RoutingBinding", "TransportOrder")
                .HtmlAttributes(new { onclick = "CleanTabMessage()" });

        })
        .Render();
    }
    </fieldset>
}
